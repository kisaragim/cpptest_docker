MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=3Jpz3NCqeSrKrQkbZnk4Qd17svPCpIc7
StorageVersion: v1

--3Jpz3NCqeSrKrQkbZnk4Qd17svPCpIc7

<?xml version='1.0' encoding='UTF-8'?><ResultsList path="/BugDetective/fileLeaks.c"><VersionInfos><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="IExecutionViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="InsureViolation" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.scope" resultId="IScopeProjectInfo" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricEstimationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationProjectInfo" ver="2"/></VersionInfos></ResultsList>
--3Jpz3NCqeSrKrQkbZnk4Qd17svPCpIc7

<?xml version='1.0' encoding='UTF-8'?><ResultInfo resultId="IFlowAnalysisViolation" ownerId="com.parasoft.xtest.checkers.api.standards" violKeys="61_/BugDetective/fileLeaks.c;64_/BugDetective/fileLeaks.c;65_/BugDetective/fileLeaks.c;63_/BugDetective/fileLeaks.c;60_/BugDetective/fileLeaks.c;62_/BugDetective/fileLeaks.c"><FlowViol msg="Data obtained from a file (&quot;c&quot;) is printed on a console" ln="16" ruleSAFMsg="Call to a dangerous method" auth="root" sev="2" rule="MISRAC2012-DIR_4_14-k" ruleSCSCMsg="Tainting point" tool="c++test" id="729845392" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="16" locStartPos="0" locEndLn="17" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="14" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="15" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Tainted data"/></Props><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props/></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType=".C" desc="fgetc(...)" rngLn="14"><Props><Prop key="Tracked variables" val="fgetc(...)"/></Props><Anns><Ann msg="Tainting point" kind="cause"/><Ann msg="Tainted data: fgetc(...)" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="!" desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props><Prop key="Tracked variables" val="c"/></Props><Anns><Ann msg="Tainted data: c" kind="var"/><Ann msg="Condition evaluation: (c != -1) (assuming true)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="16" srcRngStartPos="0" srcRngEndLn="17" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="16" ElType=".P" desc="printf(&quot;%c&quot;, c);" rngLn="16"><Props><Prop key="Tracked variables" val="c"/></Props><Anns><Ann msg="Tainted data: c" kind="var"/><Ann msg="Call to a dangerous method" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="File not closed: file" ln="49" ruleSAFMsg="Point where opened file is lost" auth="root" sev="2" rule="MISRAC2012-RULE_22_1-a" ruleSCSCMsg="Point where file is opened" tool="c++test" id="603044296" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="49" locStartPos="0" locEndLn="50" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="49" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="50" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Opened file"/></Props><ElDescList><ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="40" ElType="." desc="int ARRSIZE = 3;" rngLn="40"><Props/></ElDesc><ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="46" ElType="." desc="int i;" rngLn="46"><Props/></ElDesc><ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="47" ElType="." desc="FILE *file = NULL;" rngLn="47"><Props/></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="48" ElType="." desc="for (i = 0; i &lt; ARRSIZE; ++i) {" rngLn="48"><Props/><Anns><Ann msg="Loop condition evaluation: (i &lt; ARRSIZE) (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="49" ElType=".C" desc="file = fopen(names[i], &quot;r&quot;);" rngLn="49"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Point where file is opened" kind="cause"/><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="50" ElType="." desc="if(file==NULL) {" rngLn="50"><Props/><Anns><Ann msg="Condition evaluation: (file == 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="54" ElType="." desc="printFile(file);" rngLn="54"><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="." desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Condition evaluation: (c != -1) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="18" ElType="." desc="break;" rngLn="18"><Props/><Anns><Ann msg="Exit the loop" kind="condEval"/></Anns></ElDesc></ElDescList><Props/></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="48" ElType="." desc="for (i = 0; i &lt; ARRSIZE; ++i) {" rngLn="48"><Props/><Anns><Ann msg="Loop condition evaluation: (i &lt; ARRSIZE) (assuming true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="49" ElType=".P" desc="file = fopen(names[i], &quot;r&quot;);" rngLn="49"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/><Ann msg="Point where opened file is lost" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="File not closed: file" ln="49" ruleSAFMsg="Point where opened file is lost" auth="root" sev="4" rule="MISRAC2012-DIR_4_13-a" ruleSCSCMsg="Point where file is opened" tool="c++test" id="603044296" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="49" locStartPos="0" locEndLn="50" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="49" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="50" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Opened file"/></Props><ElDescList><ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="40" ElType="." desc="int ARRSIZE = 3;" rngLn="40"><Props/></ElDesc><ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="46" ElType="." desc="int i;" rngLn="46"><Props/></ElDesc><ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="47" ElType="." desc="FILE *file = NULL;" rngLn="47"><Props/></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="48" ElType="." desc="for (i = 0; i &lt; ARRSIZE; ++i) {" rngLn="48"><Props/><Anns><Ann msg="Loop condition evaluation: (i &lt; ARRSIZE) (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="49" ElType=".C" desc="file = fopen(names[i], &quot;r&quot;);" rngLn="49"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Point where file is opened" kind="cause"/><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="50" ElType="." desc="if(file==NULL) {" rngLn="50"><Props/><Anns><Ann msg="Condition evaluation: (file == 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="54" ElType="." desc="printFile(file);" rngLn="54"><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="." desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Condition evaluation: (c != -1) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="18" ElType="." desc="break;" rngLn="18"><Props/><Anns><Ann msg="Exit the loop" kind="condEval"/></Anns></ElDesc></ElDescList><Props/></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="48" ElType="." desc="for (i = 0; i &lt; ARRSIZE; ++i) {" rngLn="48"><Props/><Anns><Ann msg="Loop condition evaluation: (i &lt; ARRSIZE) (assuming true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="49" ElType=".P" desc="file = fopen(names[i], &quot;r&quot;);" rngLn="49"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/><Ann msg="Point where opened file is lost" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="File not closed: file" ln="36" ruleSAFMsg="Point where opened file is lost" auth="root" sev="4" rule="MISRAC2012-DIR_4_13-a" ruleSCSCMsg="Point where file is opened" tool="c++test" id="1573681103" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="36" locStartPos="0" locEndLn="37" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="26" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="27" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Opened file"/></Props><ElDescList><ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="25" ElType="." desc="FILE *file;" rngLn="25"><Props/></ElDesc><ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="26" ElType=".C" desc="file = fopen(&quot;myfile.txt&quot;, &quot;r&quot;);" rngLn="26"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Point where file is opened" kind="cause"/><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="27" ElType="." desc="if (file==NULL) {" rngLn="27"><Props/><Anns><Ann msg="Condition evaluation: (file == 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="31" ElType="." desc="printf(&quot;File successfully opened.\n\n&quot;);" rngLn="31"><Props/></ElDesc><ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="32" ElType="." desc="printFile(file);" rngLn="32"><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="." desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Condition evaluation: (c != -1) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="18" ElType="." desc="break;" rngLn="18"><Props/><Anns><Ann msg="Exit the loop" kind="condEval"/></Anns></ElDesc></ElDescList><Props/></ElDesc><ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="35" ElType="." desc="return 0;" rngLn="35"><Props/></ElDesc><ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="36" ElType=".P" desc="}" rngLn="36"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/><Ann msg="Point where opened file is lost" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="The EOF macro is compared with the modified value returned by the &quot;fgetc&quot; function" ln="15" ruleSAFMsg="Comparing value with EOF" auth="root" sev="2" rule="MISRAC2012-RULE_22_7-a" ruleSCSCMsg="Invoke function capable of returning EOF" tool="c++test" id="910895208" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="15" locStartPos="0" locEndLn="16" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="14" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="15" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props/><ElDescList><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType=".C" desc="fgetc(...)" rngLn="14"><Props/><Anns><Ann msg="Invoke function capable of returning EOF" kind="cause"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="!" desc="c = fgetc(file);" rngLn="14"><Props/><Anns><Ann msg="Casting int -> char" kind="comment"/></Anns></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType=".P" desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Casting char -> int" kind="comment"/><Ann msg="Comparing value with EOF" kind="point"/></Anns></ElDesc></ElDescList></FlowViol><FlowViol msg="File not closed: file" ln="36" ruleSAFMsg="Point where opened file is lost" auth="root" sev="2" rule="MISRAC2012-RULE_22_1-a" ruleSCSCMsg="Point where file is opened" tool="c++test" id="1573681103" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="36" locStartPos="0" locEndLn="37" locEndPos="0" locFile="/BugDetective/fileLeaks.c" FirstElSrcRngStartln="26" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="27" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/fileLeaks.c"><Props><Prop key="Tracked variables" val="Opened file"/></Props><ElDescList><ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="25" ElType="." desc="FILE *file;" rngLn="25"><Props/></ElDesc><ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="26" ElType=".C" desc="file = fopen(&quot;myfile.txt&quot;, &quot;r&quot;);" rngLn="26"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Point where file is opened" kind="cause"/><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="27" ElType="." desc="if (file==NULL) {" rngLn="27"><Props/><Anns><Ann msg="Condition evaluation: (file == 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="31" ElType="." desc="printf(&quot;File successfully opened.\n\n&quot;);" rngLn="31"><Props/></ElDesc><ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="32" ElType="." desc="printFile(file);" rngLn="32"><ElDescList><ElDesc srcRngStartln="11" srcRngStartPos="0" srcRngEndLn="12" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="11" ElType="." desc="char c;" rngLn="11"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/></Anns></ElDesc><ElDesc srcRngStartln="12" srcRngStartPos="0" srcRngEndLn="13" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="12" ElType="." desc="printf(&quot;Reading file contents:\n\n&quot;);" rngLn="12"><Props/></ElDesc><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="13" ElType="." desc="while(1) {" rngLn="13"><Props/><Anns><Ann msg="Loop condition evaluation: 1 (true)" kind="condEval"/><Ann msg="Entering the loop" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="14" srcRngStartPos="0" srcRngEndLn="15" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="14" ElType="." desc="c = fgetc(file);" rngLn="14"><Props/></ElDesc><ElDesc srcRngStartln="15" srcRngStartPos="0" srcRngEndLn="16" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="15" ElType="." desc="if (c!=EOF) {" rngLn="15"><Props/><Anns><Ann msg="Condition evaluation: (c != -1) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="18" ElType="." desc="break;" rngLn="18"><Props/><Anns><Ann msg="Exit the loop" kind="condEval"/></Anns></ElDesc></ElDescList><Props/></ElDesc><ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="35" ElType="." desc="return 0;" rngLn="35"><Props/></ElDesc><ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/BugDetective/fileLeaks.c" srcRnghash="1210532432" ln="36" ElType=".P" desc="}" rngLn="36"><Props><Prop key="Tracked variables" val="file"/></Props><Anns><Ann msg="Opened file: file" kind="var"/><Ann msg="Point where opened file is lost" kind="point"/></Anns></ElDesc></ElDescList></FlowViol></ResultInfo>
--3Jpz3NCqeSrKrQkbZnk4Qd17svPCpIc7

<?xml version='1.0' encoding='UTF-8'?><ResultInfo resultId="ICodingStandardsViolation" ownerId="com.parasoft.xtest.checkers.api.standards" violKeys="226_/BugDetective/fileLeaks.c;239_/BugDetective/fileLeaks.c;216_/BugDetective/fileLeaks.c;248_/BugDetective/fileLeaks.c;225_/BugDetective/fileLeaks.c;243_/BugDetective/fileLeaks.c;218_/BugDetective/fileLeaks.c;220_/BugDetective/fileLeaks.c;230_/BugDetective/fileLeaks.c;244_/BugDetective/fileLeaks.c;245_/BugDetective/fileLeaks.c;233_/BugDetective/fileLeaks.c;246_/BugDetective/fileLeaks.c;217_/BugDetective/fileLeaks.c;242_/BugDetective/fileLeaks.c;241_/BugDetective/fileLeaks.c;228_/BugDetective/fileLeaks.c;238_/BugDetective/fileLeaks.c;221_/BugDetective/fileLeaks.c;234_/BugDetective/fileLeaks.c;236_/BugDetective/fileLeaks.c;237_/BugDetective/fileLeaks.c;231_/BugDetective/fileLeaks.c;247_/BugDetective/fileLeaks.c;224_/BugDetective/fileLeaks.c;240_/BugDetective/fileLeaks.c;215_/BugDetective/fileLeaks.c;219_/BugDetective/fileLeaks.c;229_/BugDetective/fileLeaks.c;235_/BugDetective/fileLeaks.c;222_/BugDetective/fileLeaks.c;214_/BugDetective/fileLeaks.c;227_/BugDetective/fileLeaks.c;223_/BugDetective/fileLeaks.c;232_/BugDetective/fileLeaks.c"><StdViol msg="Function 'displayFileContent' is not in prototype form" ln="23" sev="2" auth="root" rule="MISRAC2012-RULE_8_2-c" tool="c++test" cat="MISRAC2012-RULE_8_2" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="23" locStartPos="4" locEndLn="23" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="40" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="40" locStartPos="4" locEndLn="40" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'printf' function is not allowed" ln="12" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="12" locStartPos="4" locEndLn="12" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Provide only one exit point in 'displayContentOfSeveralFiles' function" ln="58" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="58" locStartPos="4" locEndLn="58" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Function 'displayFileContent' is not in prototype form" ln="23" sev="2" auth="root" rule="MISRAC2012-RULE_1_5-c" tool="c++test" cat="MISRAC2012-RULE_1_5" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="23" locStartPos="4" locEndLn="23" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'printf' function is not allowed" ln="51" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="51" locStartPos="12" locEndLn="51" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="The expression of the 'essentially signed' type is assigned to an object with the 'essentially character' type" ln="14" sev="2" auth="root" rule="MISRAC2012-RULE_10_3-b" tool="c++test" cat="MISRAC2012-RULE_10_3" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="14" locStartPos="8" locEndLn="14" locEndPos="9" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Operands of the '!=' operator have different essential types: 'char' and 'signed char'" ln="15" sev="2" auth="root" rule="MISRAC2012-RULE_10_4-a" tool="c++test" cat="MISRAC2012-RULE_10_4" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="15" locStartPos="12" locEndLn="15" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Provide only one exit point in 'displayFileContent' function" ln="29" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="29" locStartPos="8" locEndLn="29" locEndPos="9" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Unused function's &quot;printf&quot; return value" ln="51" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="51" locStartPos="12" locEndLn="51" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Provide only one exit point in 'displayContentOfSeveralFiles' function" ln="52" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="52" locStartPos="12" locEndLn="52" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Section of code should not be 'commented out'" ln="33" sev="4" auth="root" rule="MISRAC2012-DIR_4_4-a" tool="c++test" cat="MISRAC2012-DIR_4_4" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="33" locStartPos="4" locEndLn="33" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'fclose' function is not allowed" ln="57" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="57" locStartPos="4" locEndLn="57" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Unused function's &quot;printf&quot; return value" ln="12" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="12" locStartPos="4" locEndLn="12" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'fopen' function is not allowed" ln="49" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="49" locStartPos="15" locEndLn="49" locEndPos="16" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="46" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="46" locStartPos="4" locEndLn="46" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'printf' function is not allowed" ln="28" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="28" locStartPos="8" locEndLn="28" locEndPos="9" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Function 'displayContentOfSeveralFiles' is not in prototype form" ln="38" sev="2" auth="root" rule="MISRAC2012-RULE_8_2-c" tool="c++test" cat="MISRAC2012-RULE_8_2" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="38" locStartPos="4" locEndLn="38" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'printf' function is not allowed" ln="16" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="16" locStartPos="12" locEndLn="16" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Provide only one exit point in 'displayFileContent' function" ln="35" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="35" locStartPos="4" locEndLn="35" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Prototype of function 'displayContentOfSeveralFiles' does not precede function definition" ln="38" sev="2" auth="root" rule="MISRAC2012-RULE_8_4-a" tool="c++test" cat="MISRAC2012-RULE_8_4" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="38" locStartPos="4" locEndLn="38" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Function 'displayContentOfSeveralFiles' is not in prototype form" ln="38" sev="2" auth="root" rule="MISRAC2012-RULE_1_5-c" tool="c++test" cat="MISRAC2012-RULE_1_5" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="38" locStartPos="4" locEndLn="38" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'printf' function is not allowed" ln="31" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="31" locStartPos="4" locEndLn="31" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Unused function's &quot;fclose&quot; return value" ln="57" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="57" locStartPos="4" locEndLn="57" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Prototype of function 'displayFileContent' does not precede function definition" ln="23" sev="2" auth="root" rule="MISRAC2012-RULE_8_4-a" tool="c++test" cat="MISRAC2012-RULE_8_4" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="23" locStartPos="4" locEndLn="23" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="String literal is assigned to pointer to non-const object: names" ln="41" sev="2" auth="root" rule="MISRAC2012-RULE_7_4-a" tool="c++test" cat="MISRAC2012-RULE_7_4" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="41" locStartPos="17" locEndLn="41" locEndPos="18" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="The function 'printFile' is referenced only in the translation unit where it is defined" ln="9" sev="4" auth="root" rule="MISRAC2012-RULE_8_7-a" tool="c++test" cat="MISRAC2012-RULE_8_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="9" locStartPos="5" locEndLn="9" locEndPos="6" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'fgetc' function is not allowed" ln="14" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="14" locStartPos="12" locEndLn="14" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Unused function's &quot;printf&quot; return value" ln="28" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="28" locStartPos="8" locEndLn="28" locEndPos="9" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="38" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="38" locStartPos="0" locEndLn="38" locEndPos="1" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Unused function's &quot;printf&quot; return value" ln="16" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="16" locStartPos="12" locEndLn="16" locEndPos="13" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Prototype of function 'printFile' does not precede function definition" ln="9" sev="2" auth="root" rule="MISRAC2012-RULE_8_4-a" tool="c++test" cat="MISRAC2012-RULE_8_4" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="9" locStartPos="5" locEndLn="9" locEndPos="6" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Usage of 'fopen' function is not allowed" ln="26" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="26" locStartPos="11" locEndLn="26" locEndPos="12" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="23" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="23" locStartPos="0" locEndLn="23" locEndPos="1" locFile="/BugDetective/fileLeaks.c"/><StdViol msg="Unused function's &quot;printf&quot; return value" ln="31" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="1210532432" locStartln="31" locStartPos="4" locEndLn="31" locEndPos="5" locFile="/BugDetective/fileLeaks.c"/></ResultInfo>
--3Jpz3NCqeSrKrQkbZnk4Qd17svPCpIc7--
