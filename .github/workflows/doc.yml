# Use C++test 2022.0
name: CI-Test-2022-1

on:
  push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master,child_02 ]
  #workflow_dispatch:

permissions: write-all

jobs:
  test-cpptest:
    name: Analyze project with C/C++test
    runs-on: develop_work

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: ls_check2
      run: |
         pwd
         ls 
    
    #-name: docker_RUN
    # run: docker run --name gcc --workdir=$PWD -itd -v /$PWD:$PWD -v /home/keio/cpptest:/home/keio/cpptest gcc:gcc11
    
    - name: Generate BDF
      env: 
        CPPTEST_SCAN_OUTPUT_FILE: ./BugDetective/cpptestscan.bdf
        CPPTEST_SCAN_PROJECT_NAME: BugDetective
      run: |
           docker exec gcc /home/keio/cpptest/bin/cpptesttrace make all
      working-directory: ./DevelopSampleProject/BugDetective
      
    - name: ls_check2
      run: |
         pwd
         ls    
    - name: ls_check3
      run: |
         cd DevelopSampleProject
         ls
         mkdir ./DevelopSampleProject/reports
    - name: Run C++test_git
      # Use the 'run-cpptest-action' GitHub Action.
      uses: parasoft/run-cpptest-action@2.0.0
      with:
        installDir: '/home/keio/cpptest/'
        compilerConfig: 'gcc_7-64'
        testConfig: 'builtin://Recommended Rules'
        reportFormat: xml,html,sarif
        input: './DevelopSampleProject/BugDetective/cpptestscan.bdf'
        #additionalParams: '-localsettings ./DevelopSampleProject/cpptestcli.properties'
        commandLinePattern: '/home/keio/cpptest/cpptestcli -data ./ -config "${testConfig}" -bdf "${input}" -settings ./DevelopSampleProject/cpptestcli.properties -report ./DevelopSampleProject/reports'
        

    # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v2
      env: 
        GITHUB_TOKEN: ${{ secrets.MEHISYA }}
      with:
        sarif_file: reports/report.sarif
    
    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Static analysis reports
        path: reports/*.*
