MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=rDYH28RsdR0lbrh5rnh7T5rEZWWB8w
StorageVersion: v1

--rDYH28RsdR0lbrh5rnh7T5rEZWWB8w

<?xml version='1.0' encoding='UTF-8'?><ResultsList path="/BugDetective/nullPointerDerefBenchmark.c"><VersionInfos><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="IExecutionViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="InsureViolation" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.scope" resultId="IScopeProjectInfo" ver="3"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricEstimationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationInfo" ver="2"/><StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationProjectInfo" ver="2"/></VersionInfos></ResultsList>
--rDYH28RsdR0lbrh5rnh7T5rEZWWB8w

<?xml version='1.0' encoding='UTF-8'?><ResultInfo resultId="IFlowAnalysisViolation" ownerId="com.parasoft.xtest.checkers.api.standards" violKeys="79_/BugDetective/nullPointerDerefBenchmark.c;78_/BugDetective/nullPointerDerefBenchmark.c;80_/BugDetective/nullPointerDerefBenchmark.c"><FlowViol msg="&quot;x&quot; may possibly be null" ln="13" ruleSAFMsg="Null pointer dereferencing point" auth="root" sev="2" rule="MISRAC2012-DIR_4_1-b" ruleSCSCMsg="Source of null value" tool="c++test" id="-577794662" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="13" locStartPos="0" locEndLn="14" locEndPos="0" locFile="/BugDetective/nullPointerDerefBenchmark.c" FirstElSrcRngStartln="76" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="77" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/nullPointerDerefBenchmark.c"><Props><Prop key="Tracked variables" val="Null value carrier"/></Props><ElDescList><ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="76" ElType=".C" desc="x = 0;" rngLn="76"><Props/><Anns><Ann msg="Source of null value" kind="cause"/><Ann msg="Null value carrier: x" kind="comment"/></Anns></ElDesc><ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="77" ElType="!" desc="helper2()" rngLn="77"><ElDescList><ElDesc srcRngStartln="13" srcRngStartPos="0" srcRngEndLn="14" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="13" ElType=".P" desc="return *x;" rngLn="13"><Props/><Anns><Ann msg="Null value carrier: x" kind="comment"/><Ann msg="Null pointer dereferencing point" kind="point"/></Anns></ElDesc></ElDescList><Props/></ElDesc></ElDescList></FlowViol><FlowViol msg="&quot;x&quot; may possibly be null" ln="9" ruleSAFMsg="Null pointer dereferencing point" auth="root" sev="2" rule="MISRAC2012-DIR_4_1-b" ruleSCSCMsg="Source of null value" tool="c++test" id="203144837" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="9" locStartPos="0" locEndLn="10" locEndPos="0" locFile="/BugDetective/nullPointerDerefBenchmark.c" FirstElSrcRngStartln="69" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="70" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/nullPointerDerefBenchmark.c"><Props><Prop key="Tracked variables" val="Null value carrier"/></Props><ElDescList><ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="69" ElType=".C" desc="x = 0;" rngLn="69"><Props/><Anns><Ann msg="Source of null value" kind="cause"/><Ann msg="Null value carrier: x" kind="comment"/></Anns></ElDesc><ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="70" ElType="." desc="if (b)" rngLn="70"><Props/><Anns><Ann msg="Condition evaluation: (b != 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="72" ElType="!" desc="helper1(...)" rngLn="72"><ElDescList><ElDesc srcRngStartln="7" srcRngStartPos="0" srcRngEndLn="8" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="7" ElType="." desc="if (b)" rngLn="7"><Props/><Anns><Ann msg="Condition evaluation: (b != 0) (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="9" srcRngStartPos="0" srcRngEndLn="10" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="9" ElType=".P" desc="return *x;" rngLn="9"><Props/><Anns><Ann msg="Null value carrier: x" kind="comment"/><Ann msg="Null pointer dereferencing point" kind="point"/></Anns></ElDesc></ElDescList><Props/></ElDesc></ElDescList></FlowViol><FlowViol msg="&quot;x&quot; may possibly be null" ln="51" ruleSAFMsg="Null pointer dereferencing point" auth="root" sev="2" rule="MISRAC2012-DIR_4_1-b" ruleSCSCMsg="Source of null value" tool="c++test" id="-1823566354" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="51" locStartPos="0" locEndLn="52" locEndPos="0" locFile="/BugDetective/nullPointerDerefBenchmark.c" FirstElSrcRngStartln="46" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="47" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/BugDetective/nullPointerDerefBenchmark.c"><Props><Prop key="Tracked variables" val="Null value carrier"/></Props><ElDescList><ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="45" ElType="." desc="int* y = 0;" rngLn="45"><Props/></ElDesc><ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="46" ElType=".C" desc="if (x != 0)" rngLn="46"><Props/><Anns><Ann msg="Source of null value" kind="cause"/><Ann msg="Null value carrier: x" kind="comment"/><Ann msg="Condition evaluation: (x != 0) (assuming false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="48" ElType="." desc="if (y != 0)" rngLn="48"><Props/><Anns><Ann msg="Condition evaluation: (y != 0) (false)" kind="condEval"/></Anns></ElDesc><ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/BugDetective/nullPointerDerefBenchmark.c" srcRnghash="-1583021683" ln="51" ElType=".P" desc="return *x;" rngLn="51"><Props/><Anns><Ann msg="Null value carrier: x" kind="comment"/><Ann msg="Null pointer dereferencing point" kind="point"/></Anns></ElDesc></ElDescList></FlowViol></ResultInfo>
--rDYH28RsdR0lbrh5rnh7T5rEZWWB8w

<?xml version='1.0' encoding='UTF-8'?><ResultInfo resultId="ICodingStandardsViolation" ownerId="com.parasoft.xtest.checkers.api.standards" violKeys="350_/BugDetective/nullPointerDerefBenchmark.c;405_/BugDetective/nullPointerDerefBenchmark.c;356_/BugDetective/nullPointerDerefBenchmark.c;375_/BugDetective/nullPointerDerefBenchmark.c;336_/BugDetective/nullPointerDerefBenchmark.c;362_/BugDetective/nullPointerDerefBenchmark.c;391_/BugDetective/nullPointerDerefBenchmark.c;338_/BugDetective/nullPointerDerefBenchmark.c;410_/BugDetective/nullPointerDerefBenchmark.c;345_/BugDetective/nullPointerDerefBenchmark.c;408_/BugDetective/nullPointerDerefBenchmark.c;368_/BugDetective/nullPointerDerefBenchmark.c;344_/BugDetective/nullPointerDerefBenchmark.c;372_/BugDetective/nullPointerDerefBenchmark.c;373_/BugDetective/nullPointerDerefBenchmark.c;380_/BugDetective/nullPointerDerefBenchmark.c;400_/BugDetective/nullPointerDerefBenchmark.c;401_/BugDetective/nullPointerDerefBenchmark.c;394_/BugDetective/nullPointerDerefBenchmark.c;396_/BugDetective/nullPointerDerefBenchmark.c;340_/BugDetective/nullPointerDerefBenchmark.c;365_/BugDetective/nullPointerDerefBenchmark.c;387_/BugDetective/nullPointerDerefBenchmark.c;393_/BugDetective/nullPointerDerefBenchmark.c;335_/BugDetective/nullPointerDerefBenchmark.c;341_/BugDetective/nullPointerDerefBenchmark.c;369_/BugDetective/nullPointerDerefBenchmark.c;390_/BugDetective/nullPointerDerefBenchmark.c;353_/BugDetective/nullPointerDerefBenchmark.c;359_/BugDetective/nullPointerDerefBenchmark.c;357_/BugDetective/nullPointerDerefBenchmark.c;334_/BugDetective/nullPointerDerefBenchmark.c;347_/BugDetective/nullPointerDerefBenchmark.c;360_/BugDetective/nullPointerDerefBenchmark.c;411_/BugDetective/nullPointerDerefBenchmark.c;399_/BugDetective/nullPointerDerefBenchmark.c;355_/BugDetective/nullPointerDerefBenchmark.c;379_/BugDetective/nullPointerDerefBenchmark.c;371_/BugDetective/nullPointerDerefBenchmark.c;370_/BugDetective/nullPointerDerefBenchmark.c;331_/BugDetective/nullPointerDerefBenchmark.c;346_/BugDetective/nullPointerDerefBenchmark.c;358_/BugDetective/nullPointerDerefBenchmark.c;398_/BugDetective/nullPointerDerefBenchmark.c;392_/BugDetective/nullPointerDerefBenchmark.c;332_/BugDetective/nullPointerDerefBenchmark.c;386_/BugDetective/nullPointerDerefBenchmark.c;354_/BugDetective/nullPointerDerefBenchmark.c;409_/BugDetective/nullPointerDerefBenchmark.c;348_/BugDetective/nullPointerDerefBenchmark.c;366_/BugDetective/nullPointerDerefBenchmark.c;382_/BugDetective/nullPointerDerefBenchmark.c;395_/BugDetective/nullPointerDerefBenchmark.c;403_/BugDetective/nullPointerDerefBenchmark.c;406_/BugDetective/nullPointerDerefBenchmark.c;361_/BugDetective/nullPointerDerefBenchmark.c;333_/BugDetective/nullPointerDerefBenchmark.c;342_/BugDetective/nullPointerDerefBenchmark.c;351_/BugDetective/nullPointerDerefBenchmark.c;363_/BugDetective/nullPointerDerefBenchmark.c;367_/BugDetective/nullPointerDerefBenchmark.c;402_/BugDetective/nullPointerDerefBenchmark.c;383_/BugDetective/nullPointerDerefBenchmark.c;349_/BugDetective/nullPointerDerefBenchmark.c;377_/BugDetective/nullPointerDerefBenchmark.c;389_/BugDetective/nullPointerDerefBenchmark.c;364_/BugDetective/nullPointerDerefBenchmark.c;378_/BugDetective/nullPointerDerefBenchmark.c;407_/BugDetective/nullPointerDerefBenchmark.c;337_/BugDetective/nullPointerDerefBenchmark.c;384_/BugDetective/nullPointerDerefBenchmark.c;352_/BugDetective/nullPointerDerefBenchmark.c;385_/BugDetective/nullPointerDerefBenchmark.c;388_/BugDetective/nullPointerDerefBenchmark.c;339_/BugDetective/nullPointerDerefBenchmark.c;376_/BugDetective/nullPointerDerefBenchmark.c;397_/BugDetective/nullPointerDerefBenchmark.c;412_/BugDetective/nullPointerDerefBenchmark.c;404_/BugDetective/nullPointerDerefBenchmark.c;381_/BugDetective/nullPointerDerefBenchmark.c;374_/BugDetective/nullPointerDerefBenchmark.c;343_/BugDetective/nullPointerDerefBenchmark.c"><StdViol msg="'0' is assigned to expression of pointer type" ln="26" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="26" locStartPos="8" locEndLn="26" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Test of a value against zero should be made explicit" ln="70" sev="2" auth="root" rule="MISRAC2012-RULE_14_4-a" tool="c++test" cat="MISRAC2012-RULE_14_4" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="70" locStartPos="4" locEndLn="70" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'noFalseViolation2' function" ln="30" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="30" locStartPos="8" locEndLn="30" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Variable 'y' of pointer type is initialized with '0'" ln="45" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="45" locStartPos="13" locEndLn="45" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'helper1' function" ln="8" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="8" locStartPos="8" locEndLn="8" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Variable 'y' of pointer type is initialized with '0'" ln="35" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="35" locStartPos="13" locEndLn="35" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="62" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="62" locStartPos="7" locEndLn="62" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="12" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="12" locStartPos="7" locEndLn="12" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="76" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="76" locStartPos="8" locEndLn="76" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'noFalseViolation1' should be followed by a block" ln="18" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="18" locStartPos="4" locEndLn="18" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Function 'functionCall_trueViolation2' is not in prototype form" ln="75" sev="2" auth="root" rule="MISRAC2012-RULE_1_5-c" tool="c++test" cat="MISRAC2012-RULE_1_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="75" locStartPos="11" locEndLn="75" locEndPos="12" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="38" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="38" locStartPos="13" locEndLn="38" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="17" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="17" locStartPos="8" locEndLn="17" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="44" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="44" locStartPos="7" locEndLn="44" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Parameter 'b' is not used in function 'trueViolation'" ln="44" sev="4" auth="root" rule="MISRAC2012-RULE_2_7-a" tool="c++test" cat="MISRAC2012-RULE_2_7" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="44" locStartPos="30" locEndLn="44" locEndPos="31" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'trueViolation' should be followed by a block" ln="48" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="48" locStartPos="4" locEndLn="48" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Unused function's &quot;printf&quot; return value" ln="64" sev="2" auth="root" rule="MISRAC2012-RULE_17_7-a" tool="c++test" cat="MISRAC2012-RULE_17_7" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="64" locStartPos="8" locEndLn="64" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Prototype of function 'helper2' does not precede function call" ln="65" sev="1" auth="root" rule="MISRAC2012-RULE_17_3-a" tool="c++test" cat="MISRAC2012-RULE_17_3" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="65" locStartPos="11" locEndLn="65" locEndPos="12" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Identifier 'x' is already used as static object or function identifier" ln="62" sev="4" auth="root" rule="MISRAC2012-RULE_5_9-a" tool="c++test" cat="MISRAC2012-RULE_5_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="62" locStartPos="47" locEndLn="62" locEndPos="48" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'functionCall_noFalseViolation2' should be followed by a block" ln="63" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="63" locStartPos="4" locEndLn="63" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Function 'helper2' is not in prototype form" ln="12" sev="2" auth="root" rule="MISRAC2012-RULE_8_2-c" tool="c++test" cat="MISRAC2012-RULE_8_2" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="12" locStartPos="11" locEndLn="12" locEndPos="12" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="36" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="36" locStartPos="13" locEndLn="36" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="55" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="55" locStartPos="8" locEndLn="55" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Identifier 'x' is hiding an identifier from global or namespace scope" ln="62" sev="2" auth="root" rule="MISRAC2012-RULE_5_3-a" tool="c++test" cat="MISRAC2012-RULE_5_3" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="62" locStartPos="47" locEndLn="62" locEndPos="48" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'helper1' should be followed by a block" ln="7" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="7" locStartPos="4" locEndLn="7" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="16" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="16" locStartPos="7" locEndLn="16" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'noFalseViolation3' function" ln="39" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="39" locStartPos="8" locEndLn="39" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The operand of the logical negation operator '!' should have essentially Boolean type" ln="56" sev="2" auth="root" rule="MISRAC2012-RULE_10_1-a" tool="c++test" cat="MISRAC2012-RULE_10_1" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="56" locStartPos="8" locEndLn="56" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'noFalseViolation2' should be followed by a block" ln="27" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="27" locStartPos="4" locEndLn="27" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Parameter 'b' is not used in function 'noFalseViolation3'" ln="34" sev="4" auth="root" rule="MISRAC2012-RULE_2_7-a" tool="c++test" cat="MISRAC2012-RULE_2_7" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="34" locStartPos="34" locEndLn="34" locEndPos="35" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'noFalseViolation2' function" ln="31" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="31" locStartPos="4" locEndLn="31" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Test of a value against zero should be made explicit" ln="7" sev="2" auth="root" rule="MISRAC2012-RULE_14_4-a" tool="c++test" cat="MISRAC2012-RULE_14_4" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="7" locStartPos="4" locEndLn="7" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'noFalseViolation1' function" ln="21" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="21" locStartPos="8" locEndLn="21" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="35" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="35" locStartPos="4" locEndLn="35" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="76" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="76" locStartPos="8" locEndLn="76" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Usage of 'printf' function is not allowed" ln="64" sev="2" auth="root" rule="MISRAC2012-RULE_21_6-a" tool="c++test" cat="MISRAC2012-RULE_21_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="64" locStartPos="8" locEndLn="64" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'noFalseViolation2' should be followed by a block" ln="29" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="29" locStartPos="4" locEndLn="29" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="46" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="46" locStartPos="13" locEndLn="46" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="An 'else' statement in a function 'noFalseViolation3' shall be followed by a block " ln="41" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="41" locStartPos="8" locEndLn="41" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'noFalseViolation3' function" ln="41" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="41" locStartPos="8" locEndLn="41" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="3" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="3" locStartPos="7" locEndLn="3" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'noFalseViolation1' should be followed by a block" ln="20" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="20" locStartPos="4" locEndLn="20" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="34" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="34" locStartPos="7" locEndLn="34" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="63" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="63" locStartPos="13" locEndLn="63" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="62" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="62" locStartPos="42" locEndLn="62" locEndPos="43" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="4" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="4" locStartPos="7" locEndLn="4" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="54" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="54" locStartPos="7" locEndLn="54" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Test of a value against zero should be made explicit" ln="29" sev="2" auth="root" rule="MISRAC2012-RULE_14_4-a" tool="c++test" cat="MISRAC2012-RULE_14_4" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="29" locStartPos="4" locEndLn="29" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Function 'functionCall_trueViolation2' is not in prototype form" ln="75" sev="2" auth="root" rule="MISRAC2012-RULE_8_2-c" tool="c++test" cat="MISRAC2012-RULE_8_2" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="75" locStartPos="11" locEndLn="75" locEndPos="12" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'noFalseViolation1' function" ln="22" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="22" locStartPos="4" locEndLn="22" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'noFalseViolation3' should be followed by a block" ln="38" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="38" locStartPos="4" locEndLn="38" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="48" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="48" locStartPos="13" locEndLn="48" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Pass parameter &quot;x&quot; with const specifier" ln="62" sev="4" auth="root" rule="MISRAC2012-RULE_8_13-a" tool="c++test" cat="MISRAC2012-RULE_8_13" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="62" locStartPos="47" locEndLn="62" locEndPos="48" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="69" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="69" locStartPos="8" locEndLn="69" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'functionCall_trueViolation1' should be followed by a block" ln="70" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="70" locStartPos="4" locEndLn="70" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Variable 'y' of pointer type is initialized with '0'" ln="35" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="35" locStartPos="13" locEndLn="35" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="6" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="6" locStartPos="7" locEndLn="6" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="16" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="16" locStartPos="29" locEndLn="16" locEndPos="30" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="26" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="26" locStartPos="8" locEndLn="26" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'noFalseViolation3' should be followed by a block" ln="36" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="36" locStartPos="4" locEndLn="36" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="38" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="38" locStartPos="13" locEndLn="38" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="68" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="68" locStartPos="7" locEndLn="68" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'trueViolation' function" ln="49" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="49" locStartPos="8" locEndLn="49" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="25" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="25" locStartPos="7" locEndLn="25" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'trueViolation' should be followed by a block" ln="46" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="46" locStartPos="4" locEndLn="46" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Conditional statement 'if' in a function 'functionCall_noFalseViolation1' should be followed by a block" ln="56" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="56" locStartPos="4" locEndLn="56" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="36" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="36" locStartPos="13" locEndLn="36" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="46" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="46" locStartPos="13" locEndLn="46" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="75" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="75" locStartPos="7" locEndLn="75" locEndPos="8" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'helper1' function" ln="9" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="9" locStartPos="4" locEndLn="9" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Provide only one exit point in 'trueViolation' function" ln="51" sev="4" auth="root" rule="MISRAC2012-RULE_15_5-a" tool="c++test" cat="MISRAC2012-RULE_15_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="51" locStartPos="8" locEndLn="51" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Test of a value against zero should be made explicit" ln="27" sev="2" auth="root" rule="MISRAC2012-RULE_14_4-a" tool="c++test" cat="MISRAC2012-RULE_14_4" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="27" locStartPos="4" locEndLn="27" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="An 'else' statement in a function 'trueViolation' shall be followed by a block " ln="51" sev="2" auth="root" rule="MISRAC2012-RULE_15_6-b" tool="c++test" cat="MISRAC2012-RULE_15_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="51" locStartPos="8" locEndLn="51" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="55" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="55" locStartPos="8" locEndLn="55" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Function 'helper2' is not in prototype form" ln="12" sev="2" auth="root" rule="MISRAC2012-RULE_1_5-c" tool="c++test" cat="MISRAC2012-RULE_1_5" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="12" locStartPos="11" locEndLn="12" locEndPos="12" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Variable 'y' of pointer type is initialized with '0'" ln="45" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="45" locStartPos="13" locEndLn="45" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="63" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="63" locStartPos="13" locEndLn="63" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Prototype of function 'helper2' does not precede function call" ln="77" sev="1" auth="root" rule="MISRAC2012-RULE_17_3-a" tool="c++test" cat="MISRAC2012-RULE_17_3" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="77" locStartPos="11" locEndLn="77" locEndPos="12" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="69" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-b" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="69" locStartPos="8" locEndLn="69" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="Expression of pointer type is compared with '0'" ln="48" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="48" locStartPos="13" locEndLn="48" locEndPos="14" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="The basic numerical type 'int' should not be used" ln="45" sev="4" auth="root" rule="MISRAC2012-DIR_4_6-b" tool="c++test" cat="MISRAC2012-DIR_4_6" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="45" locStartPos="4" locEndLn="45" locEndPos="5" locFile="/BugDetective/nullPointerDerefBenchmark.c"/><StdViol msg="'0' is assigned to expression of pointer type" ln="17" sev="2" auth="root" rule="MISRAC2012-RULE_11_9-a" tool="c++test" cat="MISRAC2012-RULE_11_9" lang="cpp" locType="sr" config="1" hash="-1583021683" locStartln="17" locStartPos="8" locEndLn="17" locEndPos="9" locFile="/BugDetective/nullPointerDerefBenchmark.c"/></ResultInfo>
--rDYH28RsdR0lbrh5rnh7T5rEZWWB8w--
